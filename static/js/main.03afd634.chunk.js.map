{"version":3,"sources":["hooks/useFetch.js","constants/index.js","components/search/index.js","components/header/index.js","components/favorite-button/index.js","components/film-item/index.js","hooks/useFavorites.js","components/list/index.js","pages/favorites.js","utilities/index.js","components/pagination/index.js","pages/films-by-genre.js","pages/popularFilms.js","pages/searchResults.js","pages/single-page.js","App.js","serviceWorker.js","index.js"],"names":["useFetch","link","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","canceled","fetch","then","response","status","Error","code","text","statusText","json","catch","err","objectSpread","error","API_LINK","API_KEY","IMAGE_PATH","Search","_ref","history","value","setValue","_useState3","_useState4","visibilityLiveResults","setVisibilityLiveResults","searchElement","useRef","urlForSearch","concat","results","outsideActionHandler","e","current","contains","target","document","addEventListener","removeEventListener","haveResults","react_default","a","createElement","className","ref","onSubmit","event","preventDefault","push","placeholder","onChange","onFocus","required","type","Boolean","length","slice","map","_ref2","id","title","poster_path","release_date","vote_average","src","alt","react_router_dom","to","onClick","class","PAGES","popular","path","favorites","withRouter","pathname","location","search","keys","page","key","classNames","nav-list__item--current","FavoriteButton","addToFavorite","removeFromFavorite","isFavorite","film","defineProperty","xmlns","viewBox","favorite-icon--active","d","FilmItem","posterPath","rating","favorite_button","useFavorites","initialFavotites","JSON","parse","localStorage","getItem","setFavorites","setItem","stringify","window","dispatchEvent","Event","includes","String","filmObject","clonedFavorites","assign","List","_useFavorites","film_item","Favorites","favoritesFromStorage","storageHandler","formatedFavorites","reduce","acc","_favorites$id","toConsumableArray","Fragment","list","parseQuery","query","split","pairString","generateQuery","index","Pagination","currentPage","totalPages","maxPages","onChangePage","_useData","startPage","endPage","_ref$maxPages","maxPagesBeforeCurrent","Math","floor","maxPagesAfterCurrent","ceil","useData","pages","start","end","arr","i","range","pagination__item--current","href","FilmsByGenre","genreId","match","params","urlForFilms","PopularFilms","currentSearch","Number","urlForPopular","total_pages","pagination","pageNumber","updatedSearchString","SearchResults","SinglePage","filmId","urlForFilm","urlForSimilar","similarFilmsData","overview","genres","name","App","basename","header","react_router","exact","component","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03afd634.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (link) => {\n  const [data, setData] = useState({})\n  useEffect(() => {\n    let canceled\n\n    if (link) {\n      fetch(link)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error({code: response.status, text: response.statusText})\n        } else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        if (!canceled) {\n          setData(data)\n        }\n      })\n      .catch(err => {\n        setData({error: true, ...err})\n      })\n    }\n\n    return () => {\n      canceled = true\n    }\n  }, [link]);\n  return data;\n};\n\nexport default useFetch;\n","export const API_LINK = \"https://api.themoviedb.org/3\";\nexport const API_KEY = \"0941767c7620287c671c840b1c091fd2\";\nexport const IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\nexport const IMAGE_PATH_SMALL= \"https://image.tmdb.org/t/p/w200\";\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { API_KEY, API_LINK, IMAGE_PATH_SMALL } from \"../../constants\";\nimport \"./style.css\";\n\nconst Search = ({ history }) => {\n  const [value, setValue] = useState(\"\");\n  const [visibilityLiveResults, setVisibilityLiveResults] = useState(false);\n  const searchElement = useRef(null);\n\n  const urlForSearch = value\n    ? `${API_LINK}/search/movie?api_key=${API_KEY}&page=1&query=${value}`\n    : \"\";\n  const { results } = useFetch(urlForSearch);\n\n  useEffect(() => {\n    const outsideActionHandler = e => {\n      if (searchElement && !searchElement.current.contains(e.target)) {\n        setVisibilityLiveResults(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", outsideActionHandler);\n    document.addEventListener(\"focusin\", outsideActionHandler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", outsideActionHandler);\n      document.removeEventListener(\"focusin\", outsideActionHandler);\n    };\n  });\n\n  const submitForm = event => {\n    event.preventDefault();\n    history.push(`/search/?query=${value}&page=1`);\n    setValue(\"\")\n  };\n\n  const haveResults = value && results;\n\n  return (\n    <div className=\"search-wrapper\" ref={searchElement}>\n      <form className=\"search-form\" onSubmit={submitForm}>\n        <input\n          className=\"search-form__input\"\n          placeholder=\"Type something...\"\n          value={value}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n          onFocus={() => setVisibilityLiveResults(true)}\n          required\n        />\n        <button className=\"search-form__button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {haveResults && visibilityLiveResults && Boolean(results.length) && (\n        <ul className=\"live-results\">\n          {results\n            .slice(0, 5)\n            .map(({ id, title, poster_path, release_date, vote_average }) => {\n              return (\n                <li className=\"live-results__item\">\n                  <img\n                    className=\"live-results__image\"\n                    src={`${IMAGE_PATH_SMALL}/${poster_path}`}\n                    alt={`Poster for ${title}`}\n                  />\n                  <div className=\"live-results__meta\">\n                    <Link to={`/film/${id}`} className=\"live-results__link\" onClick={() => setValue(\"\")}>\n                      {title}\n                    </Link>\n                    &nbsp;\n                    <span class=\"live-results__year\">\n                      ({release_date.slice(0, 4)})\n                    </span>\n                    <br />\n                    <div className=\"rating live-results__rating\">\n                      {vote_average}\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n      {haveResults && visibilityLiveResults && !results.length && (\n        <div className=\"live-results live-results--empty\">Nothing to found</div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport classNames from 'classnames'\nimport Search from \"../search/index\";\nimport './style.css'\n\nconst PAGES = {\n  popular: {\n    path: \"/\",\n    title: \"Popular\"\n  },\n  favorites: {\n    path: \"/favorites\",\n    title: \"Favorites\"\n  }\n};\n\nconst Header = ({ history }) => {\n  const {location: {pathname}} = history;\n  return (\n    <header className=\"header\">\n      <Search history={history} />\n      <nav className=\"nav\">\n        <ul className=\"nav-list\">\n          {Object.keys(PAGES).map(page => {\n            return (\n              <li\n                key={page}\n                className={classNames(\"nav-list__item\", {\n                  \"nav-list__item--current\": pathname === PAGES[page].path\n                })}\n              >\n                <Link to={PAGES[page].path} className=\"nav-list__link\">\n                  {PAGES[page].title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport classNames from 'classnames'\nimport \"./style.css\";\n\nconst FavoriteButton = ({\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite,\n  id,\n  film\n}) => (\n    <button\n      type=\"button\"\n      className=\"favorite-button film-item__favorite\"\n      onClick={isFavorite ? removeFromFavorite(id) : addToFavorite({ [id]: film })}\n      title={isFavorite ? \"Remove from favorite\" : \"Add to favorite\"}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 53.9 53.9\"\n        className={classNames(\"favorite-icon\", {'favorite-icon--active': isFavorite})}\n      >\n        <path d=\"M27 1.3l8.3 16.9 18.6 2.7L40.4 34l3.2 18.5-16.7-8.7-16.6 8.7L13.5 34 0 21l18.6-2.7z\" />\n      </svg>\n    </button>\n  )\n\nexport default FavoriteButton;\n","import React from \"react\";\nimport { IMAGE_PATH } from \"../../constants\";\nimport FavoriteButton from \"../favorite-button/index\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst FilmItem = ({\n  title,\n  id,\n  posterPath,\n  rating,\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite\n}) => (\n  <article className=\"film-item\">\n    <div className=\"film-item__image-wrapper\">\n      <img\n        src={`${IMAGE_PATH}/${posterPath}`}\n        className=\"film-item__image\"\n        alt={`Poster for ${title}`}\n      />\n    </div>\n    <div className=\"film-item__inner\">\n      <h3 className=\"film-item__title\">\n        <Link to={`/film/${id}`} className=\"film-item__link\">\n          {title}\n        </Link>\n      </h3>\n      <div className=\"film-item__top\">\n        <FavoriteButton\n          addToFavorite={addToFavorite}\n          removeFromFavorite={removeFromFavorite}\n          isFavorite={isFavorite}\n          id={id}\n          film={{title, vote_average: rating, poster_path: posterPath}}\n        />\n        {rating && <span className=\"rating\">{rating}</span>}\n      </div>\n    </div>\n  </article>\n);\n\nexport default FilmItem;\n","import {useState, useEffect} from 'react'\n\nconst useFavorites = () => {\n  const initialFavotites = JSON.parse(localStorage.getItem(\"favorites\")) || {};\n  const [favorites, setFavorites] = useState(initialFavotites);\n\n  const isFavorite = id => Object.keys(favorites).includes(String(id))\n\n  const addToFavorite = filmObject => () => {\n    setFavorites({ ...favorites, ...filmObject });\n  };\n\n  const removeFromFavorite = id => () => {\n    const clonedFavorites = Object.assign({}, favorites);\n    delete clonedFavorites[id];\n    setFavorites(clonedFavorites);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    window.dispatchEvent( new Event('storage') )\n  }, [favorites]);\n\n  return {isFavorite, addToFavorite, removeFromFavorite}\n}\n\nexport default useFavorites","import React from \"react\";\nimport FilmItem from \"../film-item/index\";\nimport useFavorites from '../../hooks/useFavorites'\nimport './style.css'\n\nconst List = ({ data }) => {\n  const {isFavorite, addToFavorite, removeFromFavorite} = useFavorites()\n\n  return data && data.length ? (\n    <ul className=\"films-list\">\n      {data.map(({ title, id, poster_path, vote_average }) => {\n        return (\n          <li key={id} className=\"films-list__item\">\n            <FilmItem\n              title={title}\n              id={id}\n              posterPath={poster_path}\n              rating={vote_average}\n              addToFavorite={addToFavorite}\n              removeFromFavorite={removeFromFavorite}\n              isFavorite={isFavorite(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  ) : null;\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"../components/list/index\";\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState(null);\n\n  useEffect(() => {\n    const favoritesFromStorage =\n      JSON.parse(localStorage.getItem(\"favorites\")) || {};\n    setFavorites(favoritesFromStorage);\n  }, []);\n\n  useEffect(() => {\n    const storageHandler = e => {\n      setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\n    }\n    window.addEventListener('storage', storageHandler)\n\n    return () => window.removeEventListener('storage', storageHandler)\n  })\n\n  const formatedFavorites = favorites ? Object.keys(favorites).reduce((acc, id) => {\n    const { poster_path, title, vote_average } = favorites[id];\n    return [...acc, { id, poster_path, title, vote_average }];\n  }, []) : []\n\n  if(!favorites) return null\n\n  return (\n    <React.Fragment>\n      <section className=\"page-content\">\n        <div className=\"container\">\n          <h2 className=\"page-title\">Favorite films</h2>\n        </div>\n        {Object.keys(favorites).length === 0 ? (\n          \"List of favorites films is empty\"\n        ) : (\n          <List data={formatedFavorites} />\n        )}\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Favorites;\n","export const range = (start, end) => {\n  const arr = [];\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nexport const parseQuery = query => {\n  return query\n    ? query\n        .slice(1)\n        .split(\"&\")\n        .map(pairString => pairString.split(\"=\"))\n        .reduce((acc, [key, value]) => {\n          return { ...acc, [key]: value };\n        }, {})\n    : {};\n};\n\nexport const generateQuery = data => {\n  return data\n    ? Object.keys(data).reduce((acc, key, index) => {\n        if (index === 0) {\n          acc += `?${key}=${data[key]}`;\n        } else {\n          acc += `&${key}=${data[key]}`;\n        }\n\n        return acc;\n      }, \"\")\n    : \"\";\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { range } from \"../../utilities\";\nimport './style.css'\n\nconst useData = ({ currentPage, totalPages, maxPages = 7 }) => {\n  // depends on maxPages currentPage totalPages\n  // calc maxPagesBeforeCurrent maxPagesAfterCurrent startPage endPage\n  // returns startPage endPage\n  const maxPagesBeforeCurrent = Math.floor(maxPages / 2);\n  const maxPagesAfterCurrent = Math.ceil(maxPages / 2) - 1;\n  let startPage;\n  let endPage;\n\n  if (totalPages < maxPages) {\n    startPage = 1;\n    endPage = totalPages;\n  } else if (\n    currentPage - maxPagesBeforeCurrent > 1 &&\n    currentPage + maxPagesAfterCurrent < totalPages\n  ) {\n    startPage = currentPage - maxPagesBeforeCurrent;\n    endPage = currentPage + maxPagesAfterCurrent;\n  } else if (currentPage - maxPagesBeforeCurrent <= 1) {\n    startPage = 1;\n    endPage = maxPages;\n  } else if (currentPage + maxPagesAfterCurrent >= totalPages) {\n    startPage = totalPages - maxPages + 1;\n    endPage = totalPages;\n  }\n\n  return { startPage, endPage };\n};\n\nconst Pagination = ({ currentPage, totalPages, maxPages, onChangePage }) => {\n  const { startPage, endPage } = useData({ currentPage, totalPages, maxPages });\n\n  const pages = range(startPage, endPage);\n\n  return (\n    pages.length && (\n      <ul className=\"pagination\">\n        {pages.map(page => {\n          return (\n            <li\n              key={page}\n              className={classNames(\"pagination__item\", {\n                \"pagination__item--current\": page === currentPage\n              })}\n            >\n              <a\n                href={`#page${page}`}\n                className=\"pagination__link\"\n                onClick={e => {\n                  e.preventDefault();\n                  onChangePage(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from \"../components/list/index\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst FilmsByGenre = ({ match }) => {\n  const {\n    params: { genreId }\n  } = match;\n  const urlForFilms = `${API_LINK}/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`;\n\n  const { results } = useFetch(urlForFilms);\n\n  if (!results) return null;\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <h2 className=\"page-title\">Films by genre</h2>\n      </div>\n      <List data={results} />\n      {/* {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )} */}\n    </React.Fragment>\n  );\n};\n\nexport default FilmsByGenre;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport useFetch from \"../hooks/useFetch\";\nimport List from \"../components/list/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\n\nconst PopularFilms = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page) || 1;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForPopular = `${API_LINK}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  const data = useFetch(urlForPopular, page);\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Popular films</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default PopularFilms;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from '../components/list/index'\nimport useFetch from \"../hooks/useFetch\";\n\nconst SearchResults = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page);\n  const { query } = currentSearch;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForSearch = `${API_LINK}/search/movie?api_key=${API_KEY}&page=${page}&query=${query}`;\n  const data = useFetch(urlForSearch, page, location);\n\n  return (\n    data && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Search results</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport List from \"../components/list/index\";\nimport FavoriteButton from \"../components/favorite-button/index\";\nimport { API_KEY, API_LINK, IMAGE_PATH } from \"../constants\";\nimport useFavorites from \"../hooks/useFavorites\";\n\nconst SinglePage = ({ match }) => {\n  const {\n    params: { filmId }\n  } = match;\n\n  const urlForFilm = `${API_LINK}/movie/${filmId}?api_key=${API_KEY}`;\n  const urlForSimilar = `${API_LINK}/movie/${filmId}/similar?api_key=${API_KEY}`;\n\n  const data = useFetch(urlForFilm);\n  const similarFilmsData = useFetch(urlForSimilar, filmId);\n  const { isFavorite, addToFavorite, removeFromFavorite } = useFavorites();\n\n  const {\n    title,\n    poster_path: posterPath,\n    overview,\n    genres,\n    vote_average: rating\n  } = data;\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <article>\n        <h2>{title}</h2>\n        <img src={`${IMAGE_PATH}/${posterPath}`} alt={`Poster for ${title}`} />\n        {Boolean(genres.length) && (\n          <ul>\n            {genres.map(({ id, name }) => {\n              return (\n                <li key={id}>\n                  <Link to={`/genre/${id}`}>{name}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        Rating: {rating}\n        <FavoriteButton\n          addToFavorite={addToFavorite}\n          removeFromFavorite={removeFromFavorite}\n          isFavorite={isFavorite(filmId)}\n          id={filmId}\n          film={{ title, vote_average: rating, poster_path: posterPath }}\n        />\n        <p>{overview}</p>\n        {Boolean(Object.keys(similarFilmsData).length) && (\n          <section>\n            <h3>Similar</h3>\n            <List data={similarFilmsData.results} />\n          </section>\n        )}\n      </article>\n    )\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/header/index\";\nimport {Favorites, FilmsByGenre, PopularFilms, SearchResults,SinglePage} from './pages/index'\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router basename={process.env.NODE_ENV === 'development' ? '/' : 'films'}>\n      <div className=\"App\">\n        <Header />\n        <Route exact path=\"/\" component={PopularFilms} />\n        <Route path=\"/search\" component={SearchResults} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/film/:filmId\" component={SinglePage} />\n        <Route path=\"/genre/:genreId\" component={FilmsByGenre} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}