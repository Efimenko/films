{"version":3,"sources":["hooks/use-fetch.js","utilities/index.js","hooks/use-focus-within.js","constants/index.js","components/poster/index.js","components/search/index.js","components/header/index.js","components/favorite-button/index.js","components/film-item/index.js","hooks/use-favorites.js","components/list/index.js","pages/favorites.js","components/pagination/index.js","pages/films-by-genre.js","pages/popular-films.js","pages/search-results.js","pages/single-page.js","App.js","serviceWorker.js","index.js"],"names":["useFetch","link","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","canceled","fetch","then","response","status","Error","code","text","statusText","json","catch","err","objectSpread","error","parseQuery","query","slice","split","map","pairString","reduce","acc","_ref","_ref2","key","value","defineProperty","generateQuery","keys","index","concat","debounce","delay","callback","timerId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","useDebouncedState","initialState","undefined","state","setState","deps","useMemo","fn","toConsumableArray","useMemoFunction","useFocusWithin","nodeRef","_useDebouncedState","_useDebouncedState2","focused","setFocused","onFocus","useCallback","onBlur","API_LINK","API_KEY","IMAGE_PATH","Poster","posterPath","title","small","imageError","setImageError","react_default","a","createElement","Fragment","data-testid","src","className","alt","onError","xmlns","viewBox","d","Search","history","setValue","_useFocusWithin","handlers","objectWithoutProperties","urlForSearch","results","haveResults","Boolean","assign","onSubmit","event","preventDefault","push","placeholder","onChange","e","target","required","type","id","poster_path","release_date","vote_average","poster","react_router_dom","to","onClick","PAGES","popular","path","favorites","withRouter","pathname","location","search","page","classNames","nav-list__item--current","FavoriteButton","addToFavorite","removeFromFavorite","isFavorite","film","favorite-icon--active","FilmItem","rating","favorite_button","useFavorites","initialFavotites","JSON","parse","localStorage","getItem","setFavorites","setItem","stringify","window","dispatchEvent","Event","includes","String","filmObject","clonedFavorites","List","_useFavorites","film_item","Favorites","favoritesFromStorage","storageHandler","addEventListener","removeEventListener","formatedFavorites","_favorites$id","list","Pagination","currentPage","totalPages","maxPages","onChangePage","_useData","startPage","endPage","_ref$maxPages","maxPagesBeforeCurrent","Math","floor","maxPagesAfterCurrent","ceil","useData","pages","start","end","arr","i","range","pagination__item--current","href","FilmsByGenre","genreId","match","params","urlForFilms","PopularFilms","currentSearch","Number","urlForPopular","total_pages","pagination","pageNumber","updatedSearchString","SearchResults","SinglePage","filmId","urlForFilm","urlForSimilar","similarFilmsData","overview","genres","name","App","basename","header","react_router","exact","component","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8c88edb.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (link) => {\n  const [data, setData] = useState({})\n  useEffect(() => {\n    let canceled\n\n    if (link) {\n      fetch(link)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error({code: response.status, text: response.statusText})\n        } else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        if (!canceled) {\n          setData(data)\n        }\n      })\n      .catch(err => {\n        setData({error: true, ...err})\n      })\n    }\n\n    return () => {\n      canceled = true\n    }\n  }, [link]);\n\n  return data;\n};\n\nexport default useFetch;\n","export const range = (start, end) => {\n  const arr = [];\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nexport const parseQuery = query => {\n  return query\n    ? query\n        .slice(1)\n        .split(\"&\")\n        .map(pairString => pairString.split(\"=\"))\n        .reduce((acc, [key, value]) => {\n          return { ...acc, [key]: value };\n        }, {})\n    : {};\n};\n\nexport const generateQuery = data => {\n  return data\n    ? Object.keys(data).reduce((acc, key, index) => {\n        if (index === 0) {\n          acc += `?${key}=${data[key]}`;\n        } else {\n          acc += `&${key}=${data[key]}`;\n        }\n\n        return acc;\n      }, \"\")\n    : \"\";\n};\n\nexport const debounce = (delay, callback) => {\n  let timerId = null;\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      callback(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n","import { useState, useMemo, useCallback } from \"react\";\nimport {debounce} from '../utilities'\n\nconst useMemoFunction = (...deps) =>\n  useMemo(() => {\n    const [fn, ...args] = deps;\n    return fn(...args);\n  }, deps);\n\nconst partial = (fn, ...partialArgs) => (...args) => fn(...partialArgs, ...args)\n\nconst useDebouncedState = (initialState, delay = 0) => {\n  const [state, setState] = useState(initialState)\n  const setStateDebounced = useMemoFunction(debounce, delay, setState)\n  return [state, setStateDebounced]\n}\n\nconst useFocusWithin = (nodeRef, callback) => {\n  const [focused, setFocused] = useDebouncedState(false)\n  const onFocus = useCallback(() => setFocused(true), [setFocused])\n  const onBlur = useCallback(() => setFocused(false), [setFocused])\n  return {focused, onFocus, onBlur}\n};\n\nexport default useFocusWithin","export const API_LINK = \"https://api.themoviedb.org/3\";\nexport const API_KEY = \"0941767c7620287c671c840b1c091fd2\";\nexport const IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\nexport const IMAGE_PATH_SMALL= \"https://image.tmdb.org/t/p/w200\";\n","import React, { useState } from \"react\";\nimport { IMAGE_PATH, IMAGE_PATH_SMALL } from \"../../constants\";\nimport './style.css'\n\nconst Poster = ({ posterPath, title, small }) => {\n  const [imageError, setImageError] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!imageError && (\n        <img\n          data-testid=\"poster-image\"\n          src={`${small ? IMAGE_PATH_SMALL: IMAGE_PATH}/${posterPath}`}\n          className=\"image\"\n          alt={`Poster for ${title}`}\n          onError={() => setImageError(true)}\n        />\n      )}\n      {imageError && (\n        <div className=\"image-placeholder\" data-testid=\"poster-placeholder\">\n          <svg\n            className=\"image-placeholder__icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 58 58\"\n          >\n            <path d=\"M57 6H1a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h56a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zm-1 44H2V8h54v42z\" />\n            <path d=\"M16 28.14a5.57 5.57 0 1 0-.01-11.15A5.57 5.57 0 0 0 16 28.14zM16 19a3.57 3.57 0 1 1 0 7.15A3.57 3.57 0 0 1 16 19zM7 46a1 1 0 0 0 .66-.25L23.97 31.4l10.3 10.3a1 1 0 1 0 1.42-1.41l-4.8-4.81 9.17-10.06 11.26 10.33a1 1 0 0 0 1.35-1.48l-12-11a1 1 0 0 0-1.41.06l-9.8 10.73-4.74-4.74a1 1 0 0 0-1.36-.04L6.34 44.25A1 1 0 0 0 7 46z\" />\n          </svg>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Poster;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/use-fetch\";\nimport useFocusWithin from \"../../hooks/use-focus-within\";\nimport { API_KEY, API_LINK } from \"../../constants\";\nimport Poster from \"../poster/index\";\nimport \"./style.css\";\n\nconst Search = ({ history }) => {\n  const [value, setValue] = useState(\"\");\n  const {focused, ...handlers} = useFocusWithin();\n\n  const urlForSearch = value\n    ? `${API_LINK}/search/movie?api_key=${API_KEY}&page=1&query=${value}`\n    : \"\";\n  const { results } = useFetch(urlForSearch);\n\n  const submitForm = event => {\n    event.preventDefault();\n    history.push(`/search/?query=${value}&page=1`);\n    setValue(\"\");\n  };\n\n  const haveResults = value && results && Boolean(results.length);\n\n  return (\n    <div\n      className=\"search-wrapper\"\n      {...handlers}\n    >\n      <form\n        className=\"search-form\"\n        onSubmit={submitForm}\n        data-testid=\"search-form\"\n      >\n        <input\n          data-testid=\"search-input\"\n          className=\"search-form__input\"\n          placeholder=\"Type something...\"\n          value={value}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n          required\n        />\n        <button\n          className=\"search-form__button\"\n          type=\"submit\"\n          data-testid=\"submit-button\"\n        >\n          Search\n        </button>\n      </form>\n      {haveResults && focused && (\n        <ul className=\"live-results\" data-testid=\"live-results\">\n          {results\n            .slice(0, 5)\n            .map(({ id, title, poster_path, release_date, vote_average }) => {\n              return (\n                <li className=\"live-results__item\" key={id}>\n                  <div className=\"live-results__image\">\n                    <Poster title={title} posterPath={poster_path} small />\n                  </div>\n                  <div className=\"live-results__meta\">\n                    <Link\n                      to={`/film/${id}`}\n                      className=\"live-results__link\"\n                      onClick={() => setValue(\"\")}\n                    >\n                      {title}\n                    </Link>\n                    &nbsp;\n                    {release_date && (\n                      <span className=\"live-results__year\">\n                        ({release_date.slice(0, 4)})\n                      </span>\n                    )}\n                    <br />\n                    <div className=\"rating live-results__rating\">\n                      {vote_average}\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n      {focused && results && !results.length && (\n        <div className=\"live-results live-results--empty\">\n          Nothing was found\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport classNames from 'classnames'\nimport Search from \"../search/index\";\nimport './style.css'\n\nconst PAGES = {\n  popular: {\n    path: \"/\",\n    title: \"Popular\"\n  },\n  favorites: {\n    path: \"/favorites\",\n    title: \"Favorites\"\n  }\n};\n\nconst Header = ({ history }) => {\n  const {location: {pathname}} = history;\n  return (\n    <header className=\"header\">\n      <Search history={history} />\n      <nav className=\"nav\">\n        <ul className=\"nav-list\" data-testid=\"nav-list\">\n          {Object.keys(PAGES).map(page => {\n            return (\n              <li\n                key={page}\n                className={classNames(\"nav-list__item\", {\n                  \"nav-list__item--current\": pathname === PAGES[page].path\n                })}\n              >\n                <Link to={PAGES[page].path} className=\"nav-list__link\">\n                  {PAGES[page].title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport classNames from 'classnames'\nimport \"./style.css\";\n\nconst FavoriteButton = ({\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite,\n  id,\n  film\n}) => (\n    <button\n      type=\"button\"\n      className=\"favorite-button film-item__favorite\"\n      onClick={isFavorite ? removeFromFavorite(id) : addToFavorite({ [id]: film })}\n      title={isFavorite ? \"Remove from favorite\" : \"Add to favorite\"}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 53.9 53.9\"\n        className={classNames(\"favorite-icon\", {'favorite-icon--active': isFavorite})}\n      >\n        <path d=\"M27 1.3l8.3 16.9 18.6 2.7L40.4 34l3.2 18.5-16.7-8.7-16.6 8.7L13.5 34 0 21l18.6-2.7z\" />\n      </svg>\n    </button>\n  )\n\nexport default FavoriteButton;\n","import React from \"react\";\nimport FavoriteButton from \"../favorite-button/index\";\nimport Poster from \"../poster/index\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst FilmItem = ({\n  title,\n  id,\n  posterPath,\n  rating,\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite\n}) => {\n  return (\n    <article className=\"film-item\">\n      <div className=\"film-item__image-wrapper\">\n        <Poster title={title} posterPath={posterPath} />\n      </div>\n      <div className=\"film-item__inner\">\n        <h3 className=\"film-item__title\">\n          <Link to={`/film/${id}`} className=\"film-item__link\">\n            {title}\n          </Link>\n        </h3>\n        <div className=\"film-item__top\">\n          <FavoriteButton\n            addToFavorite={addToFavorite}\n            removeFromFavorite={removeFromFavorite}\n            isFavorite={isFavorite}\n            id={id}\n            film={{ title, vote_average: rating, poster_path: posterPath }}\n          />\n          {Boolean(rating) && <span className=\"rating\">{rating}</span>}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default FilmItem;\n","import {useState, useEffect} from 'react'\n\nconst useFavorites = () => {\n  const initialFavotites = JSON.parse(localStorage.getItem(\"favorites\")) || {};\n  const [favorites, setFavorites] = useState(initialFavotites);\n\n  const isFavorite = id => Object.keys(favorites).includes(String(id))\n\n  const addToFavorite = filmObject => () => {\n    setFavorites({ ...favorites, ...filmObject });\n  };\n\n  const removeFromFavorite = id => () => {\n    const clonedFavorites = Object.assign({}, favorites);\n    delete clonedFavorites[id];\n    setFavorites(clonedFavorites);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    window.dispatchEvent( new Event('storage') )\n  }, [favorites]);\n\n  return {isFavorite, addToFavorite, removeFromFavorite}\n}\n\nexport default useFavorites","import React from \"react\";\nimport FilmItem from \"../film-item/index\";\nimport useFavorites from '../../hooks/use-favorites'\nimport './style.css'\n\nconst List = ({ data }) => {\n  const {isFavorite, addToFavorite, removeFromFavorite} = useFavorites()\n\n  return data && data.length ? (\n    <ul className=\"films-list\">\n      {data.map(({ title, id, poster_path, vote_average }) => {\n        return (\n          <li key={id} className=\"films-list__item\">\n            <FilmItem\n              title={title}\n              id={id}\n              posterPath={poster_path}\n              rating={vote_average}\n              addToFavorite={addToFavorite}\n              removeFromFavorite={removeFromFavorite}\n              isFavorite={isFavorite(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  ) : null;\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"../components/list/index\";\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState(null);\n\n  useEffect(() => {\n    const favoritesFromStorage =\n      JSON.parse(localStorage.getItem(\"favorites\")) || {};\n    setFavorites(favoritesFromStorage);\n  }, []);\n\n  useEffect(() => {\n    const storageHandler = e => {\n      setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\n    }\n    window.addEventListener('storage', storageHandler)\n\n    return () => window.removeEventListener('storage', storageHandler)\n  })\n\n  const formatedFavorites = favorites ? Object.keys(favorites).reduce((acc, id) => {\n    const { poster_path, title, vote_average } = favorites[id];\n    return [...acc, { id, poster_path, title, vote_average }];\n  }, []) : []\n\n  if(!favorites) return null\n\n  return (\n    <React.Fragment>\n      <section className=\"page-content\">\n        <div className=\"container\">\n          <h2 className=\"page-title\">Favorite films</h2>\n        </div>\n        {Object.keys(favorites).length === 0 ? (\n          \"List of favorites films is empty\"\n        ) : (\n          <List data={formatedFavorites} />\n        )}\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { range } from \"../../utilities\";\nimport './style.css'\n\nconst useData = ({ currentPage, totalPages, maxPages = 7 }) => {\n  // depends on maxPages currentPage totalPages\n  // calc maxPagesBeforeCurrent maxPagesAfterCurrent startPage endPage\n  // returns startPage endPage\n  const maxPagesBeforeCurrent = Math.floor(maxPages / 2);\n  const maxPagesAfterCurrent = Math.ceil(maxPages / 2) - 1;\n  let startPage;\n  let endPage;\n\n  if (totalPages < maxPages) {\n    startPage = 1;\n    endPage = totalPages;\n  } else if (\n    currentPage - maxPagesBeforeCurrent > 1 &&\n    currentPage + maxPagesAfterCurrent < totalPages\n  ) {\n    startPage = currentPage - maxPagesBeforeCurrent;\n    endPage = currentPage + maxPagesAfterCurrent;\n  } else if (currentPage - maxPagesBeforeCurrent <= 1) {\n    startPage = 1;\n    endPage = maxPages;\n  } else if (currentPage + maxPagesAfterCurrent >= totalPages) {\n    startPage = totalPages - maxPages + 1;\n    endPage = totalPages;\n  }\n\n  return { startPage, endPage };\n};\n\nconst Pagination = ({ currentPage, totalPages, maxPages, onChangePage }) => {\n  const { startPage, endPage } = useData({ currentPage, totalPages, maxPages });\n\n  const pages = range(startPage, endPage);\n\n  return (\n    pages.length && (\n      <ul className=\"pagination\">\n        {pages.map(page => {\n          return (\n            <li\n              key={page}\n              className={classNames(\"pagination__item\", {\n                \"pagination__item--current\": page === currentPage\n              })}\n            >\n              <a\n                href={`#page${page}`}\n                className=\"pagination__link\"\n                onClick={e => {\n                  e.preventDefault();\n                  onChangePage(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from \"../components/list/index\";\nimport useFetch from \"../hooks/use-fetch\";\n\nconst FilmsByGenre = ({ match }) => {\n  const {\n    params: { genreId }\n  } = match;\n  const urlForFilms = `${API_LINK}/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`;\n\n  const { results } = useFetch(urlForFilms);\n\n  if (!results) return null;\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <h2 className=\"page-title\">Films by genre</h2>\n      </div>\n      <List data={results} />\n      {/* {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )} */}\n    </React.Fragment>\n  );\n};\n\nexport default FilmsByGenre;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport useFetch from \"../hooks/use-fetch\";\nimport List from \"../components/list/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\n\nconst PopularFilms = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page) || 1;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForPopular = `${API_LINK}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  const data = useFetch(urlForPopular, page);\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Popular films</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default PopularFilms;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from '../components/list/index'\nimport useFetch from \"../hooks/use-fetch\";\n\nconst SearchResults = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page);\n  const { query } = currentSearch;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForSearch = `${API_LINK}/search/movie?api_key=${API_KEY}&page=${page}&query=${query}`;\n  const data = useFetch(urlForSearch, page, location);\n\n  return (\n    data && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Search results</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/use-fetch\";\nimport List from \"../components/list/index\";\nimport FavoriteButton from \"../components/favorite-button/index\";\nimport { API_KEY, API_LINK, IMAGE_PATH } from \"../constants\";\nimport useFavorites from \"../hooks/use-favorites\";\n\nconst SinglePage = ({ match }) => {\n  const {\n    params: { filmId }\n  } = match;\n\n  const urlForFilm = `${API_LINK}/movie/${filmId}?api_key=${API_KEY}`;\n  const urlForSimilar = `${API_LINK}/movie/${filmId}/similar?api_key=${API_KEY}`;\n\n  const data = useFetch(urlForFilm);\n  const similarFilmsData = useFetch(urlForSimilar, filmId);\n  const { isFavorite, addToFavorite, removeFromFavorite } = useFavorites();\n\n  const {\n    title,\n    poster_path: posterPath,\n    overview,\n    genres,\n    vote_average: rating\n  } = data;\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <article>\n        <h2>{title}</h2>\n        <img src={`${IMAGE_PATH}/${posterPath}`} alt={`Poster for ${title}`} />\n        {Boolean(genres.length) && (\n          <ul>\n            {genres.map(({ id, name }) => {\n              return (\n                <li key={id}>\n                  <Link to={`/genre/${id}`}>{name}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        Rating: {rating}\n        <FavoriteButton\n          addToFavorite={addToFavorite}\n          removeFromFavorite={removeFromFavorite}\n          isFavorite={isFavorite(filmId)}\n          id={filmId}\n          film={{ title, vote_average: rating, poster_path: posterPath }}\n        />\n        <p>{overview}</p>\n        {Boolean(Object.keys(similarFilmsData).length) && (\n          <section>\n            <h3>Similar</h3>\n            <List data={similarFilmsData.results} />\n          </section>\n        )}\n      </article>\n    )\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/header/index\";\nimport {Favorites, FilmsByGenre, PopularFilms, SearchResults,SinglePage} from './pages/index'\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router basename={process.env.NODE_ENV === 'development' ? '/' : 'films'}>\n      <div className=\"App\">\n        <Header />\n        <Route exact path=\"/\" component={PopularFilms} />\n        <Route path=\"/search\" component={SearchResults} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/film/:filmId\" component={SinglePage} />\n        <Route path=\"/genre/:genreId\" component={FilmsByGenre} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}