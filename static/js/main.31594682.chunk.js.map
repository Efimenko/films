{"version":3,"sources":["hooks/use-fetch.js","utilities/index.js","hooks/use-focus-within.js","constants/index.js","components/poster/index.js","components/search/index.js","components/header/index.js","components/favorite-button/index.js","components/film-item/index.js","hooks/use-favorites.js","components/list/index.js","pages/favorites.js","components/pagination/index.js","pages/films-by-genre.js","pages/popular-films.js","pages/search-results.js","pages/single-page.js","App.js","serviceWorker.js","index.js"],"names":["useFetch","link","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","canceled","fetch","then","response","status","Error","code","text","statusText","json","catch","err","objectSpread","error","parseQuery","query","slice","split","map","pairString","reduce","acc","_ref","_ref2","key","value","defineProperty","generateQuery","keys","index","concat","useFocusWithin","nodeRef","callback","debounced","delay","timerId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","debounce","handleFocusIn","event","current","contains","target","handleFocusOut","document","addEventListener","removeEventListener","API_LINK","API_KEY","IMAGE_PATH","Poster","posterPath","title","small","imageError","setImageError","react_default","a","createElement","Fragment","data-testid","src","className","alt","onError","xmlns","viewBox","d","Search","history","setValue","_useState3","_useState4","visibilityLiveResults","setVisibilityLiveResults","searchElement","useRef","urlForSearch","results","haveResults","Boolean","ref","onSubmit","preventDefault","push","placeholder","onChange","e","required","type","id","poster_path","release_date","vote_average","poster","react_router_dom","to","onClick","PAGES","popular","path","favorites","withRouter","pathname","location","search","page","classNames","nav-list__item--current","FavoriteButton","addToFavorite","removeFromFavorite","isFavorite","film","favorite-icon--active","FilmItem","rating","favorite_button","useFavorites","initialFavotites","JSON","parse","localStorage","getItem","setFavorites","setItem","stringify","window","dispatchEvent","Event","includes","String","filmObject","clonedFavorites","assign","List","_useFavorites","film_item","Favorites","favoritesFromStorage","storageHandler","formatedFavorites","_favorites$id","toConsumableArray","list","Pagination","currentPage","totalPages","maxPages","onChangePage","_useData","startPage","endPage","_ref$maxPages","maxPagesBeforeCurrent","Math","floor","maxPagesAfterCurrent","ceil","useData","pages","start","end","arr","i","range","pagination__item--current","href","FilmsByGenre","genreId","match","params","urlForFilms","PopularFilms","currentSearch","Number","urlForPopular","total_pages","pagination","pageNumber","updatedSearchString","SearchResults","SinglePage","filmId","urlForFilm","urlForSimilar","similarFilmsData","overview","genres","name","App","basename","header","react_router","exact","component","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31594682.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (link) => {\n  const [data, setData] = useState({})\n  useEffect(() => {\n    let canceled\n\n    if (link) {\n      fetch(link)\n      .then(response => {\n        if (response.status !== 200) {\n          throw new Error({code: response.status, text: response.statusText})\n        } else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        if (!canceled) {\n          setData(data)\n        }\n      })\n      .catch(err => {\n        setData({error: true, ...err})\n      })\n    }\n\n    return () => {\n      canceled = true\n    }\n  }, [link]);\n\n  return data;\n};\n\nexport default useFetch;\n","export const range = (start, end) => {\n  const arr = [];\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nexport const parseQuery = query => {\n  return query\n    ? query\n        .slice(1)\n        .split(\"&\")\n        .map(pairString => pairString.split(\"=\"))\n        .reduce((acc, [key, value]) => {\n          return { ...acc, [key]: value };\n        }, {})\n    : {};\n};\n\nexport const generateQuery = data => {\n  return data\n    ? Object.keys(data).reduce((acc, key, index) => {\n        if (index === 0) {\n          acc += `?${key}=${data[key]}`;\n        } else {\n          acc += `&${key}=${data[key]}`;\n        }\n\n        return acc;\n      }, \"\")\n    : \"\";\n};\n\nexport const debounce = (delay, callback) => {\n  let timerId = null;\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      callback(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n","import {useEffect} from 'react'\nimport {debounce} from '../utilities'\n\nconst useFocusWithin = (nodeRef, callback) => {\n  useEffect(() => {\n    let debounced = debounce(0, callback);\n\n    const handleFocusIn = event => {\n      if (!nodeRef.current.contains(event.target)) {\n        return;\n      }\n      debounced(true);\n    };\n\n    const handleFocusOut = event => {\n      if (!nodeRef.current.contains(event.target)) {\n        return;\n      }\n      debounced(false);\n    };\n\n    document.addEventListener(\"focusin\", handleFocusIn);\n    document.addEventListener(\"focusout\", handleFocusOut);\n\n    return () => {\n      document.removeEventListener(\"focusin\", handleFocusIn);\n      document.removeEventListener(\"focusout\", handleFocusOut);\n    };\n  }, [nodeRef, callback]);\n};\n\nexport default useFocusWithin","export const API_LINK = \"https://api.themoviedb.org/3\";\nexport const API_KEY = \"0941767c7620287c671c840b1c091fd2\";\nexport const IMAGE_PATH = \"https://image.tmdb.org/t/p/w500\";\nexport const IMAGE_PATH_SMALL= \"https://image.tmdb.org/t/p/w200\";\n","import React, { useState } from \"react\";\nimport { IMAGE_PATH, IMAGE_PATH_SMALL } from \"../../constants\";\nimport './style.css'\n\nconst Poster = ({ posterPath, title, small }) => {\n  const [imageError, setImageError] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!imageError && (\n        <img\n          data-testid=\"poster-image\"\n          src={`${small ? IMAGE_PATH_SMALL: IMAGE_PATH}/${posterPath}`}\n          className=\"image\"\n          alt={`Poster for ${title}`}\n          onError={() => setImageError(true)}\n        />\n      )}\n      {imageError && (\n        <div className=\"image-placeholder\" data-testid=\"poster-placeholder\">\n          <svg\n            className=\"image-placeholder__icon\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 58 58\"\n          >\n            <path d=\"M57 6H1a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h56a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1zm-1 44H2V8h54v42z\" />\n            <path d=\"M16 28.14a5.57 5.57 0 1 0-.01-11.15A5.57 5.57 0 0 0 16 28.14zM16 19a3.57 3.57 0 1 1 0 7.15A3.57 3.57 0 0 1 16 19zM7 46a1 1 0 0 0 .66-.25L23.97 31.4l10.3 10.3a1 1 0 1 0 1.42-1.41l-4.8-4.81 9.17-10.06 11.26 10.33a1 1 0 0 0 1.35-1.48l-12-11a1 1 0 0 0-1.41.06l-9.8 10.73-4.74-4.74a1 1 0 0 0-1.36-.04L6.34 44.25A1 1 0 0 0 7 46z\" />\n          </svg>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Poster;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/use-fetch\";\nimport useFocusWithin from '../../hooks/use-focus-within'\nimport { API_KEY, API_LINK } from \"../../constants\";\nimport Poster from \"../poster/index\";\nimport \"./style.css\";\n\nconst Search = ({ history }) => {\n  const [value, setValue] = useState(\"\");\n  const [visibilityLiveResults, setVisibilityLiveResults] = useState(false);\n  const searchElement = useRef(null);\n\n  const urlForSearch = value\n    ? `${API_LINK}/search/movie?api_key=${API_KEY}&page=1&query=${value}`\n    : \"\";\n  const { results } = useFetch(urlForSearch);\n\n  const submitForm = event => {\n    event.preventDefault();\n    history.push(`/search/?query=${value}&page=1`);\n    setValue(\"\");\n  };\n\n  const haveResults = value && results && Boolean(results.length);\n\n  useFocusWithin(searchElement, setVisibilityLiveResults);\n\n  return (\n    <div className=\"search-wrapper\" ref={searchElement}>\n      <form\n        className=\"search-form\"\n        onSubmit={submitForm}\n        data-testid=\"search-form\"\n      >\n        <input\n          data-testid=\"search-input\"\n          className=\"search-form__input\"\n          placeholder=\"Type something...\"\n          value={value}\n          onChange={e => {\n            setValue(e.target.value);\n          }}\n          required\n        />\n        <button\n          className=\"search-form__button\"\n          type=\"submit\"\n          data-testid=\"submit-button\"\n        >\n          Search\n        </button>\n      </form>\n      {haveResults && visibilityLiveResults && (\n        <ul className=\"live-results\" data-testid=\"live-results\">\n          {results\n            .slice(0, 5)\n            .map(({ id, title, poster_path, release_date, vote_average }) => {\n              return (\n                <li className=\"live-results__item\" key={id}>\n                  <div className=\"live-results__image\">\n                    <Poster title={title} posterPath={poster_path} small />\n                  </div>\n                  <div className=\"live-results__meta\">\n                    <Link\n                      to={`/film/${id}`}\n                      className=\"live-results__link\"\n                      onClick={() => setValue(\"\")}\n                    >\n                      {title}\n                    </Link>\n                    &nbsp;\n                    {release_date && (\n                      <span className=\"live-results__year\">\n                        ({release_date.slice(0, 4)})\n                      </span>\n                    )}\n                    <br />\n                    <div className=\"rating live-results__rating\">\n                      {vote_average}\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n      {visibilityLiveResults && results && !results.length && (\n        <div className=\"live-results live-results--empty\">\n          Nothing was found\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport classNames from 'classnames'\nimport Search from \"../search/index\";\nimport './style.css'\n\nconst PAGES = {\n  popular: {\n    path: \"/\",\n    title: \"Popular\"\n  },\n  favorites: {\n    path: \"/favorites\",\n    title: \"Favorites\"\n  }\n};\n\nconst Header = ({ history }) => {\n  const {location: {pathname}} = history;\n  return (\n    <header className=\"header\">\n      <Search history={history} />\n      <nav className=\"nav\">\n        <ul className=\"nav-list\">\n          {Object.keys(PAGES).map(page => {\n            return (\n              <li\n                key={page}\n                className={classNames(\"nav-list__item\", {\n                  \"nav-list__item--current\": pathname === PAGES[page].path\n                })}\n              >\n                <Link to={PAGES[page].path} className=\"nav-list__link\">\n                  {PAGES[page].title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport classNames from 'classnames'\nimport \"./style.css\";\n\nconst FavoriteButton = ({\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite,\n  id,\n  film\n}) => (\n    <button\n      type=\"button\"\n      className=\"favorite-button film-item__favorite\"\n      onClick={isFavorite ? removeFromFavorite(id) : addToFavorite({ [id]: film })}\n      title={isFavorite ? \"Remove from favorite\" : \"Add to favorite\"}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 53.9 53.9\"\n        className={classNames(\"favorite-icon\", {'favorite-icon--active': isFavorite})}\n      >\n        <path d=\"M27 1.3l8.3 16.9 18.6 2.7L40.4 34l3.2 18.5-16.7-8.7-16.6 8.7L13.5 34 0 21l18.6-2.7z\" />\n      </svg>\n    </button>\n  )\n\nexport default FavoriteButton;\n","import React from \"react\";\n\nimport FavoriteButton from \"../favorite-button/index\";\nimport Poster from \"../poster/index\"\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst FilmItem = ({\n  title,\n  id,\n  posterPath,\n  rating,\n  addToFavorite,\n  removeFromFavorite,\n  isFavorite\n}) => {\n\n  return (\n    <article className=\"film-item\">\n      <div className=\"film-item__image-wrapper\">\n        <Poster title={title} posterPath={posterPath} />\n      </div>\n      <div className=\"film-item__inner\">\n        <h3 className=\"film-item__title\">\n          <Link to={`/film/${id}`} className=\"film-item__link\">\n            {title}\n          </Link>\n        </h3>\n        <div className=\"film-item__top\">\n          <FavoriteButton\n            addToFavorite={addToFavorite}\n            removeFromFavorite={removeFromFavorite}\n            isFavorite={isFavorite}\n            id={id}\n            film={{ title, vote_average: rating, poster_path: posterPath }}\n          />\n          {Boolean(rating) && <span className=\"rating\">{rating}</span>}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default FilmItem;\n","import {useState, useEffect} from 'react'\n\nconst useFavorites = () => {\n  const initialFavotites = JSON.parse(localStorage.getItem(\"favorites\")) || {};\n  const [favorites, setFavorites] = useState(initialFavotites);\n\n  const isFavorite = id => Object.keys(favorites).includes(String(id))\n\n  const addToFavorite = filmObject => () => {\n    setFavorites({ ...favorites, ...filmObject });\n  };\n\n  const removeFromFavorite = id => () => {\n    const clonedFavorites = Object.assign({}, favorites);\n    delete clonedFavorites[id];\n    setFavorites(clonedFavorites);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    window.dispatchEvent( new Event('storage') )\n  }, [favorites]);\n\n  return {isFavorite, addToFavorite, removeFromFavorite}\n}\n\nexport default useFavorites","import React from \"react\";\nimport FilmItem from \"../film-item/index\";\nimport useFavorites from '../../hooks/use-favorites'\nimport './style.css'\n\nconst List = ({ data }) => {\n  const {isFavorite, addToFavorite, removeFromFavorite} = useFavorites()\n\n  return data && data.length ? (\n    <ul className=\"films-list\">\n      {data.map(({ title, id, poster_path, vote_average }) => {\n        return (\n          <li key={id} className=\"films-list__item\">\n            <FilmItem\n              title={title}\n              id={id}\n              posterPath={poster_path}\n              rating={vote_average}\n              addToFavorite={addToFavorite}\n              removeFromFavorite={removeFromFavorite}\n              isFavorite={isFavorite(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  ) : null;\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"../components/list/index\";\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState(null);\n\n  useEffect(() => {\n    const favoritesFromStorage =\n      JSON.parse(localStorage.getItem(\"favorites\")) || {};\n    setFavorites(favoritesFromStorage);\n  }, []);\n\n  useEffect(() => {\n    const storageHandler = e => {\n      setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\n    }\n    window.addEventListener('storage', storageHandler)\n\n    return () => window.removeEventListener('storage', storageHandler)\n  })\n\n  const formatedFavorites = favorites ? Object.keys(favorites).reduce((acc, id) => {\n    const { poster_path, title, vote_average } = favorites[id];\n    return [...acc, { id, poster_path, title, vote_average }];\n  }, []) : []\n\n  if(!favorites) return null\n\n  return (\n    <React.Fragment>\n      <section className=\"page-content\">\n        <div className=\"container\">\n          <h2 className=\"page-title\">Favorite films</h2>\n        </div>\n        {Object.keys(favorites).length === 0 ? (\n          \"List of favorites films is empty\"\n        ) : (\n          <List data={formatedFavorites} />\n        )}\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { range } from \"../../utilities\";\nimport './style.css'\n\nconst useData = ({ currentPage, totalPages, maxPages = 7 }) => {\n  // depends on maxPages currentPage totalPages\n  // calc maxPagesBeforeCurrent maxPagesAfterCurrent startPage endPage\n  // returns startPage endPage\n  const maxPagesBeforeCurrent = Math.floor(maxPages / 2);\n  const maxPagesAfterCurrent = Math.ceil(maxPages / 2) - 1;\n  let startPage;\n  let endPage;\n\n  if (totalPages < maxPages) {\n    startPage = 1;\n    endPage = totalPages;\n  } else if (\n    currentPage - maxPagesBeforeCurrent > 1 &&\n    currentPage + maxPagesAfterCurrent < totalPages\n  ) {\n    startPage = currentPage - maxPagesBeforeCurrent;\n    endPage = currentPage + maxPagesAfterCurrent;\n  } else if (currentPage - maxPagesBeforeCurrent <= 1) {\n    startPage = 1;\n    endPage = maxPages;\n  } else if (currentPage + maxPagesAfterCurrent >= totalPages) {\n    startPage = totalPages - maxPages + 1;\n    endPage = totalPages;\n  }\n\n  return { startPage, endPage };\n};\n\nconst Pagination = ({ currentPage, totalPages, maxPages, onChangePage }) => {\n  const { startPage, endPage } = useData({ currentPage, totalPages, maxPages });\n\n  const pages = range(startPage, endPage);\n\n  return (\n    pages.length && (\n      <ul className=\"pagination\">\n        {pages.map(page => {\n          return (\n            <li\n              key={page}\n              className={classNames(\"pagination__item\", {\n                \"pagination__item--current\": page === currentPage\n              })}\n            >\n              <a\n                href={`#page${page}`}\n                className=\"pagination__link\"\n                onClick={e => {\n                  e.preventDefault();\n                  onChangePage(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from \"../components/list/index\";\nimport useFetch from \"../hooks/use-fetch\";\n\nconst FilmsByGenre = ({ match }) => {\n  const {\n    params: { genreId }\n  } = match;\n  const urlForFilms = `${API_LINK}/discover/movie?api_key=${API_KEY}&with_genres=${genreId}`;\n\n  const { results } = useFetch(urlForFilms);\n\n  if (!results) return null;\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <h2 className=\"page-title\">Films by genre</h2>\n      </div>\n      <List data={results} />\n      {/* {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )} */}\n    </React.Fragment>\n  );\n};\n\nexport default FilmsByGenre;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport useFetch from \"../hooks/use-fetch\";\nimport List from \"../components/list/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\n\nconst PopularFilms = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page) || 1;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForPopular = `${API_LINK}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  const data = useFetch(urlForPopular, page);\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Popular films</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default PopularFilms;\n","import React from \"react\";\nimport Pagination from \"../components/pagination/index\";\nimport { parseQuery, generateQuery } from \"../utilities\";\nimport { API_LINK, API_KEY } from \"../constants\";\nimport List from '../components/list/index'\nimport useFetch from \"../hooks/use-fetch\";\n\nconst SearchResults = ({ location, history }) => {\n  const currentSearch = parseQuery(location.search);\n  const page = Number(currentSearch.page);\n  const { query } = currentSearch;\n\n  const updatePage = pageNumber => {\n    const updatedSearchString = generateQuery({\n      ...currentSearch,\n      page: pageNumber\n    });\n\n    history.push({\n      search: updatedSearchString\n    });\n  };\n\n  const urlForSearch = `${API_LINK}/search/movie?api_key=${API_KEY}&page=${page}&query=${query}`;\n  const data = useFetch(urlForSearch, page, location);\n\n  return (\n    data && (\n      <React.Fragment>\n        <section className=\"page-content\">\n          <div className=\"container\">\n            <h2 className=\"page-title\">Search results</h2>\n          </div>\n          <List data={data.results} />\n        </section>\n        {data.total_pages && (\n          <Pagination\n            currentPage={page}\n            totalPages={data.total_pages}\n            onChangePage={updatePage}\n          />\n        )}\n      </React.Fragment>\n    )\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/use-fetch\";\nimport List from \"../components/list/index\";\nimport FavoriteButton from \"../components/favorite-button/index\";\nimport { API_KEY, API_LINK, IMAGE_PATH } from \"../constants\";\nimport useFavorites from \"../hooks/use-favorites\";\n\nconst SinglePage = ({ match }) => {\n  const {\n    params: { filmId }\n  } = match;\n\n  const urlForFilm = `${API_LINK}/movie/${filmId}?api_key=${API_KEY}`;\n  const urlForSimilar = `${API_LINK}/movie/${filmId}/similar?api_key=${API_KEY}`;\n\n  const data = useFetch(urlForFilm);\n  const similarFilmsData = useFetch(urlForSimilar, filmId);\n  const { isFavorite, addToFavorite, removeFromFavorite } = useFavorites();\n\n  const {\n    title,\n    poster_path: posterPath,\n    overview,\n    genres,\n    vote_average: rating\n  } = data;\n\n  return (\n    Boolean(Object.keys(data).length) && (\n      <article>\n        <h2>{title}</h2>\n        <img src={`${IMAGE_PATH}/${posterPath}`} alt={`Poster for ${title}`} />\n        {Boolean(genres.length) && (\n          <ul>\n            {genres.map(({ id, name }) => {\n              return (\n                <li key={id}>\n                  <Link to={`/genre/${id}`}>{name}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        Rating: {rating}\n        <FavoriteButton\n          addToFavorite={addToFavorite}\n          removeFromFavorite={removeFromFavorite}\n          isFavorite={isFavorite(filmId)}\n          id={filmId}\n          film={{ title, vote_average: rating, poster_path: posterPath }}\n        />\n        <p>{overview}</p>\n        {Boolean(Object.keys(similarFilmsData).length) && (\n          <section>\n            <h3>Similar</h3>\n            <List data={similarFilmsData.results} />\n          </section>\n        )}\n      </article>\n    )\n  );\n};\n\nexport default SinglePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/header/index\";\nimport {Favorites, FilmsByGenre, PopularFilms, SearchResults,SinglePage} from './pages/index'\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router basename={process.env.NODE_ENV === 'development' ? '/' : 'films'}>\n      <div className=\"App\">\n        <Header />\n        <Route exact path=\"/\" component={PopularFilms} />\n        <Route path=\"/search\" component={SearchResults} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/film/:filmId\" component={SinglePage} />\n        <Route path=\"/genre/:genreId\" component={FilmsByGenre} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}